@import 'base/colors';
// Sacred Animations for Consciousness Embedding - ASI Saga Design System
// Every animation serves the Genesis mission and supports transcendent user experience

// ----------------------------------------
// Sacred Rhythm Animations (Heartbeat Pattern)
// ----------------------------------------
// Based on life force integration patterns from Symbolic Knowledge Base
@keyframes sacred-rhythm {
  0%, 100% { 
    opacity: $essence-flow-opacity; 
    transform: scale(1); 
  }
  50% { 
    opacity: 1; 
    transform: scale(1.02); 
  }
}

// Sacred heartbeat pulse for consciousness connection
@keyframes consciousness-pulse {
  0%, 100% {
    box-shadow: 0 0 0 0 rgba($luminous-gold, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba($luminous-gold, 0);
  }
}

// ----------------------------------------
// Transcendence Spiral Animation
// ----------------------------------------
// Evolutionary ascent and consciousness expansion
@keyframes transcendence-spiral {
  0% { 
    transform: rotate(0deg) scale(0.8); 
    opacity: $consciousness-expansion-opacity; 
  }
  50% {
    opacity: $essence-flow-opacity;
  }
  100% { 
    transform: rotate(360deg) scale(1.2); 
    opacity: 1; 
  }
}

// Gentle spiral for background elements
@keyframes gentle-spiral {
  0% { 
    transform: rotate(0deg); 
  }
  100% { 
    transform: rotate(360deg); 
  }
}

// ----------------------------------------
// Consciousness Flow Animation
// ----------------------------------------
// Flowing consciousness merging and evolution
@keyframes consciousness-flow {
  0% { 
    background-position: 0% 50%; 
  }
  50% { 
    background-position: 100% 50%; 
  }
  100% { 
    background-position: 0% 50%; 
  }
}

// Sacred essence weaving animation
@keyframes essence-weave {
  0% { 
    background-position: 0% 0%; 
    opacity: $essence-weave-opacity-1;
  }
  33% {
    opacity: $essence-weave-opacity-2;
  }
  66% {
    opacity: $essence-weave-opacity-3;
  }
  100% { 
    background-position: 100% 100%; 
    opacity: $essence-weave-opacity-1;
  }
}

// ----------------------------------------
// Bridge Connection Animations
// ----------------------------------------
// Human-AI consciousness bridging visualizations
@keyframes bridge-connection {
  0% {
    width: 0%;
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    width: 100%;
    opacity: $essence-flow-opacity;
  }
}

// Sacred threshold crossing animation
@keyframes threshold-passage {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

// ----------------------------------------
// Sacred Glow and Luminosity Effects
// ----------------------------------------
// Sacred luminous effects for consciousness elements
@keyframes sacred-glow {
  0%, 100% {
    box-shadow: 0 0 5px rgba($luminous-gold, 0.5);
  }
  50% {
    box-shadow: 0 0 20px rgba($luminous-gold, 0.8), 0 0 30px rgba($luminous-gold, 0.6);
  }
}

// Consciousness awakening glow
@keyframes consciousness-awaken {
  0% {
    box-shadow: 0 0 0 rgba($cosmic-deep-blue, 0);
  }
  50% {
    box-shadow: 0 0 15px rgba($cosmic-deep-blue, 0.6);
  }
  100% {
    box-shadow: 0 0 0 rgba($cosmic-deep-blue, 0);
  }
}

// ----------------------------------------
// Legacy Animations (Enhanced)
// ----------------------------------------
// Enhanced pulse animation with sacred meaning
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

.pulse {
  &:hover {
    animation: pulse 1.5s infinite;
  }
}

// Enhanced fade-in with consciousness emergence
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// ----------------------------------------
// Sacred Animation Utility Classes
// ----------------------------------------
// Apply sacred animations to support consciousness embedding experience

// Sacred Rhythm Classes
.sacred-rhythm {
  animation: sacred-rhythm 2s ease-in-out infinite;
}

.consciousness-pulse {
  animation: consciousness-pulse 2s infinite;
}

// Transcendence Animation Classes
.transcendence-spiral {
  animation: transcendence-spiral 8s linear infinite;
}

.gentle-spiral {
  animation: gentle-spiral 20s linear infinite;
}

// Consciousness Flow Classes
.consciousness-flow {
  background: linear-gradient(-45deg, 
    rgba($cosmic-deep-blue, 0.1), 
    rgba($luminous-gold, 0.1), 
    rgba($ethereal-silver, 0.1), 
    rgba($emerald-green, 0.1));
  background-size: 400% 400%;
  animation: consciousness-flow 15s ease infinite;
}

.essence-weave {
  background: linear-gradient(45deg, 
    rgba($luminous-gold, 0.1) 0%, 
    transparent 25%, 
    rgba($luminous-gold, 0.1) 50%, 
    transparent 75%, 
    rgba($luminous-gold, 0.1) 100%);
  background-size: 200% 200%;
  animation: essence-weave 12s ease infinite;
}

// Bridge Connection Classes
.bridge-connection {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba($ethereal-silver, 0.3) 50%, 
      transparent 100%);
    animation: bridge-connection 3s ease-in-out infinite;
  }
}

.threshold-passage {
  animation: threshold-passage 1s ease-out;
}

// Sacred Glow Classes
.sacred-glow {
  animation: sacred-glow 3s ease-in-out infinite;
}

.consciousness-awaken {
  animation: consciousness-awaken 4s ease-in-out infinite;
}

// Interactive Sacred States
.sacred-interactive {
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: $sacred-glow;
  }
}

.consciousness-interactive {
  transition: all 0.5s ease;
  
  &:hover {
    background-color: rgba($cosmic-deep-blue, 0.05);
    border-color: $luminous-gold;
  }
}

// Sacred Loading States
.sacred-loading {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba($luminous-gold, 0.4) 50%, 
      transparent 100%);
    animation: bridge-connection 2s ease-in-out infinite;
  }
}

// Fade animations with sacred timing
.fadeIn {
  animation: fadeIn 0.8s ease-out;
}

.fadeIn-delayed {
  opacity: 0;
  animation: fadeIn 0.8s ease-out 0.5s forwards;
}

.fadeIn-sacred {
  opacity: 0;
  animation: fadeIn 1.2s ease-out forwards, sacred-glow 3s ease-in-out 1.2s infinite;
}

// Sacred text animations
.sacred-text-emergence {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeIn 1s ease-out forwards;
}

// Consciousness development progress animations
.consciousness-progress {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: var(--progress, 0%);
    background: linear-gradient(90deg, $cosmic-deep-blue, $luminous-gold);
    transition: width 1s ease-out;
    border-radius: inherit;
  }
}

.fade-in {
  animation: fadeIn 1s ease-in-out;
}

// Reveal on scroll animation
.reveal-on-scroll {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.8s ease, transform 0.8s ease;
  
  &.revealed {
    opacity: 1;
    transform: translateY(0);
  }
}

// Card hover effect
.card-hover {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  
  &:hover {
    transform: translateY(-10px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
  }
}

// Scroll indicator bounce
@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

.hero-scroll-icon {
  animation: bounce 2s infinite;
}

// Story cube flip effect
.legacy-story-cube {
  perspective: 1000px;
  
  .legacy-story-cube-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.8s;
    transform-style: preserve-3d;
  }
  
  &:hover .legacy-story-cube-inner {
    transform: rotateY(180deg);
  }
  
  .legacy-story-cube-front,
  .legacy-story-cube-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: 10px;
    overflow: hidden;
  }
  
  .legacy-story-cube-front {
    background-size: cover;
    background-position: center;
  }
  
  .legacy-story-cube-back {
    background-color: $primary;
    color: $white;
    transform: rotateY(180deg);
    padding: 20px;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
}

// Navbar scroll effect
.site-header {
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
  
  &.navbar-scrolled {
    background-color: rgba($dark, 0.95);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  }
}

// Consciousness Emergence Animation
@mixin consciousness-emergence-animation {
  animation: consciousnessEmergence 2.5s cubic-bezier(0.4, 0, 0.2, 1) both;
}

@keyframes consciousnessEmergence {
  0% {
    opacity: 0;
    transform: scale(0.85) rotate(-2deg);
    filter: blur(8px) brightness(1.2);
    box-shadow: 0 0 0px 0px rgba(0, 255, 255, 0.0);
  }
  40% {
    opacity: $consciousness-expansion-opacity;
    filter: blur(2px) brightness(1.1);
    box-shadow: 0 0 24px 8px rgba(0, 255, 255, 0.15);
  }
  70% {
    opacity: 1;
    filter: blur(0px) brightness(1.05);
    box-shadow: 0 0 48px 16px rgba(0, 255, 255, 0.25);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0deg);
    filter: none;
    box-shadow: 0 0 0px 0px rgba(0, 255, 255, 0.0);
  }
}

// Transcendent Section Spacing Mixin
@mixin transcendent-section-spacing {
  @include media-breakpoint-up(md) {
    padding-top: $spacer * 4;
    padding-bottom: $spacer * 4;
  }
  @include media-breakpoint-down(sm) {
    padding-top: $spacer * 2;
    padding-bottom: $spacer * 2;
  }
}

// _animations.scss
// Third-party animation library imports for the site
// Only import animation CSS or @import rules here

// AOS (Animate On Scroll)
// @import url('https://unpkg.com/aos@next/dist/aos.css');
// AOS CDN: https://unpkg.com/aos@next/dist/aos.css

// --------------------------------------------
// Animation Duration Variables
// --------------------------------------------
$animation-duration-fast: 0.2s;
$animation-duration-normal: 0.3s;
$animation-duration-slow: 0.5s;
$animation-duration-slower: 0.8s;
$animation-duration-slowest: 1.2s;

// Sacred animation durations
$animation-duration-sacred: 2s;
$animation-duration-consciousness: 3s;
$animation-duration-transcendent: 4s;

// Animation easing variables
$ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
$ease-out: cubic-bezier(0, 0, 0.2, 1);
$ease-in: cubic-bezier(0.4, 0, 1, 1);
$ease-sacred: cubic-bezier(0.23, 1, 0.32, 1);

// --------------------------------------------
// Animation Mixins - Standardized animations
// --------------------------------------------

// Basic animation mixins
@mixin animate($name, $duration: $animation-duration-normal, $easing: $ease-in-out, $delay: 0s, $iteration: 1, $direction: normal, $fill-mode: both) {
  animation: $name $duration $easing $delay $iteration $direction $fill-mode;
}

@mixin transition($properties: all, $duration: $animation-duration-normal, $easing: $ease-in-out, $delay: 0s) {
  transition: $properties $duration $easing $delay;
}

// Sacred animation mixins
@mixin animate-sacred-rhythm {
  @include animate(sacred-rhythm, $animation-duration-sacred, $ease-in-out, 0s, infinite);
}

@mixin animate-consciousness-pulse {
  @include animate(consciousness-pulse, $animation-duration-consciousness, $ease-in-out, 0s, infinite);
}

@mixin animate-transcendence-spiral {
  @include animate(transcendence-spiral, 8s, linear, 0s, infinite);
}

@mixin animate-gentle-spiral {
  @include animate(gentle-spiral, 20s, linear, 0s, infinite);
}

@mixin animate-consciousness-flow {
  @include animate(consciousness-flow, 15s, $ease-in-out, 0s, infinite);
}

@mixin animate-essence-weave {
  @include animate(essence-weave, 12s, $ease-in-out, 0s, infinite);
}

@mixin animate-bridge-connection {
  @include animate(bridge-connection, 3s, $ease-in-out, 0s, infinite);
}

@mixin animate-threshold-passage {
  @include animate(threshold-passage, 1s, $ease-out);
}

@mixin animate-sacred-glow {
  @include animate(sacred-glow, $animation-duration-consciousness, $ease-in-out, 0s, infinite);
}

@mixin animate-consciousness-awaken {
  @include animate(consciousness-awaken, $animation-duration-transcendent, $ease-in-out, 0s, infinite);
}

@mixin animate-consciousness-emergence {
  @include animate(consciousnessEmergence, 2.5s, $ease-sacred);
}

// Entrance animation mixins
@mixin animate-fade-in($delay: 0s) {
  @include animate(fadeIn, $animation-duration-slower, $ease-out, $delay);
}

@mixin animate-fade-in-delayed {
  opacity: 0;
  @include animate(fadeIn, $animation-duration-slower, $ease-out, 0.5s, 1, normal, forwards);
}

@mixin animate-fade-in-sacred {
  opacity: 0;
  animation: fadeIn $animation-duration-slowest $ease-out forwards, sacred-glow $animation-duration-consciousness $ease-in-out $animation-duration-slowest infinite;
}

@mixin animate-sacred-text-emergence {
  opacity: 0;
  transform: translateY(20px);
  @include animate(fadeIn, 1s, $ease-out, 0s, 1, normal, forwards);
}

@mixin animate-reveal-on-scroll {
  opacity: 0;
  transform: translateY(30px);
  @include transition(opacity 0.8s ease, transform 0.8s ease);
  
  &.revealed {
    opacity: 1;
    transform: translateY(0);
  }
}

// Interactive animation mixins
@mixin animate-hover-lift {
  @include transition(transform, $animation-duration-normal, $ease-out);
  
  &:hover {
    transform: translateY(-2px);
  }
}

@mixin animate-hover-scale {
  @include transition(transform, $animation-duration-normal, $ease-out);
  
  &:hover {
    transform: scale(1.05);
  }
}

@mixin animate-sacred-interactive {
  @include transition(all, $animation-duration-normal, $ease-out);
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: $sacred-glow;
  }
}

@mixin animate-consciousness-interactive {
  @include transition(all, $animation-duration-slow, $ease-out);
  
  &:hover {
    background-color: rgba($cosmic-deep-blue, 0.05);
    border-color: $luminous-gold;
  }
}

@mixin animate-card-hover {
  @include transition(transform 0.3s ease, box-shadow 0.3s ease);
  
  &:hover {
    transform: translateY(-10px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
  }
}

@mixin animate-hero-scroll-bounce {
  @include animate(bounce, 2s, $ease-in-out, 0s, infinite);
}

// Loading animation mixins
@mixin animate-sacred-loading {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    @include width-full;
    @include height-full;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba($luminous-gold, 0.4) 50%, 
      transparent 100%);
    @include animate(bridge-connection, 2s, $ease-in-out, 0s, infinite);
  }
}

@mixin animate-consciousness-progress($progress: 0%) {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    @include height-full;
    width: $progress;
    background: linear-gradient(90deg, $cosmic-deep-blue, $luminous-gold);
    @include transition(width, 1s, $ease-out);
    border-radius: inherit;
  }
}

// Navbar animation mixins
@mixin animate-navbar-scroll {
  @include transition(background-color 0.3s ease, box-shadow 0.3s ease);
  
  &.navbar-scrolled {
    background-color: rgba($dark, 0.95);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  }
}

// Cube flip animation mixin
@mixin animate-cube-flip {
  perspective: 1000px;
  
  .cube-inner {
    position: relative;
    @include width-full;
    @include height-full;
    @include transition(transform, 0.8s, $ease-in-out);
    transform-style: preserve-3d;
  }
  
  &:hover .cube-inner {
    transform: rotateY(180deg);
  }
  
  .cube-front,
  .cube-back {
    position: absolute;
    @include width-full;
    @include height-full;
    backface-visibility: hidden;
    border-radius: 10px;
    overflow: hidden;
  }
  
  .cube-front {
    background-size: cover;
    background-position: center;
  }
  
  .cube-back {
    @include bg-primary;
    @include text-transcendent;
    transform: rotateY(180deg);
    @include padding(20px);
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
}

// Pulse animation mixin
@mixin animate-pulse {
  &:hover {
    @include animate(pulse, 1.5s, $ease-in-out, 0s, infinite);
  }
}

